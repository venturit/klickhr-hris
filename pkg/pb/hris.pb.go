// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0-devel
// 	protoc        v3.21.3
// source: pkg/pb/hris.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UploadHRISRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileType       int64  `protobuf:"varint,1,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`
	RunType        int64  `protobuf:"varint,2,opt,name=run_type,json=runType,proto3" json:"run_type,omitempty"`
	ImportType     int64  `protobuf:"varint,3,opt,name=import_type,json=importType,proto3" json:"import_type,omitempty"`
	OrganizationId int64  `protobuf:"varint,4,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	FileName       string `protobuf:"bytes,5,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FileBytes      []byte `protobuf:"bytes,6,opt,name=file_bytes,json=fileBytes,proto3" json:"file_bytes,omitempty"`
}

func (x *UploadHRISRequest) Reset() {
	*x = UploadHRISRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_hris_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadHRISRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadHRISRequest) ProtoMessage() {}

func (x *UploadHRISRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_hris_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadHRISRequest.ProtoReflect.Descriptor instead.
func (*UploadHRISRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_hris_proto_rawDescGZIP(), []int{0}
}

func (x *UploadHRISRequest) GetFileType() int64 {
	if x != nil {
		return x.FileType
	}
	return 0
}

func (x *UploadHRISRequest) GetRunType() int64 {
	if x != nil {
		return x.RunType
	}
	return 0
}

func (x *UploadHRISRequest) GetImportType() int64 {
	if x != nil {
		return x.ImportType
	}
	return 0
}

func (x *UploadHRISRequest) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *UploadHRISRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadHRISRequest) GetFileBytes() []byte {
	if x != nil {
		return x.FileBytes
	}
	return nil
}

type UploadHRISResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *UploadHRISResponse) Reset() {
	*x = UploadHRISResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_hris_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadHRISResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadHRISResponse) ProtoMessage() {}

func (x *UploadHRISResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_hris_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadHRISResponse.ProtoReflect.Descriptor instead.
func (*UploadHRISResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_hris_proto_rawDescGZIP(), []int{1}
}

func (x *UploadHRISResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UploadHRISResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_pkg_pb_hris_proto protoreflect.FileDescriptor

var file_pkg_pb_hris_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x68, 0x72, 0x69, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x04, 0x68, 0x72, 0x69, 0x73, 0x22, 0xd1, 0x01, 0x0a, 0x11, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x48, 0x52, 0x49, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x72, 0x75, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x72, 0x75, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x42, 0x0a,
	0x12, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x52, 0x49, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x32, 0x50, 0x0a, 0x0b, 0x48, 0x52, 0x49, 0x53, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x41, 0x0a, 0x0a, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x52, 0x49, 0x53, 0x12, 0x17,
	0x2e, 0x68, 0x72, 0x69, 0x73, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x52, 0x49, 0x53,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x68, 0x72, 0x69, 0x73, 0x2e, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x52, 0x49, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_pb_hris_proto_rawDescOnce sync.Once
	file_pkg_pb_hris_proto_rawDescData = file_pkg_pb_hris_proto_rawDesc
)

func file_pkg_pb_hris_proto_rawDescGZIP() []byte {
	file_pkg_pb_hris_proto_rawDescOnce.Do(func() {
		file_pkg_pb_hris_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_pb_hris_proto_rawDescData)
	})
	return file_pkg_pb_hris_proto_rawDescData
}

var file_pkg_pb_hris_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_pkg_pb_hris_proto_goTypes = []interface{}{
	(*UploadHRISRequest)(nil),  // 0: hris.UploadHRISRequest
	(*UploadHRISResponse)(nil), // 1: hris.UploadHRISResponse
}
var file_pkg_pb_hris_proto_depIdxs = []int32{
	0, // 0: hris.HRISService.UploadHRIS:input_type -> hris.UploadHRISRequest
	1, // 1: hris.HRISService.UploadHRIS:output_type -> hris.UploadHRISResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pkg_pb_hris_proto_init() }
func file_pkg_pb_hris_proto_init() {
	if File_pkg_pb_hris_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_pb_hris_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadHRISRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_hris_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadHRISResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_pb_hris_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_pb_hris_proto_goTypes,
		DependencyIndexes: file_pkg_pb_hris_proto_depIdxs,
		MessageInfos:      file_pkg_pb_hris_proto_msgTypes,
	}.Build()
	File_pkg_pb_hris_proto = out.File
	file_pkg_pb_hris_proto_rawDesc = nil
	file_pkg_pb_hris_proto_goTypes = nil
	file_pkg_pb_hris_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// HRISServiceClient is the client API for HRISService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HRISServiceClient interface {
	UploadHRIS(ctx context.Context, in *UploadHRISRequest, opts ...grpc.CallOption) (*UploadHRISResponse, error)
}

type hRISServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewHRISServiceClient(cc grpc.ClientConnInterface) HRISServiceClient {
	return &hRISServiceClient{cc}
}

func (c *hRISServiceClient) UploadHRIS(ctx context.Context, in *UploadHRISRequest, opts ...grpc.CallOption) (*UploadHRISResponse, error) {
	out := new(UploadHRISResponse)
	err := c.cc.Invoke(ctx, "/hris.HRISService/UploadHRIS", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HRISServiceServer is the server API for HRISService service.
type HRISServiceServer interface {
	UploadHRIS(context.Context, *UploadHRISRequest) (*UploadHRISResponse, error)
}

// UnimplementedHRISServiceServer can be embedded to have forward compatible implementations.
type UnimplementedHRISServiceServer struct {
}

func (*UnimplementedHRISServiceServer) UploadHRIS(context.Context, *UploadHRISRequest) (*UploadHRISResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadHRIS not implemented")
}

func RegisterHRISServiceServer(s *grpc.Server, srv HRISServiceServer) {
	s.RegisterService(&_HRISService_serviceDesc, srv)
}

func _HRISService_UploadHRIS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadHRISRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HRISServiceServer).UploadHRIS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hris.HRISService/UploadHRIS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HRISServiceServer).UploadHRIS(ctx, req.(*UploadHRISRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HRISService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hris.HRISService",
	HandlerType: (*HRISServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UploadHRIS",
			Handler:    _HRISService_UploadHRIS_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/pb/hris.proto",
}
